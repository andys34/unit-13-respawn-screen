@inject IJSRuntime JsRuntime

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Unit 13 Respawn Screen</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">   
        @foreach (Data.Scenario obj in scenarios)
{
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="(async () => await LoadLayout(obj.Name))" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> @obj.Name
            </NavLink>
        </div>
} 
    </nav>
</div>


@code {
    private bool collapseNavMenu = true;
    private Data.Scenario[] scenarios = Data.BackendService.Scenarios;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LoadLayout(string name)
    {
        await JsRuntime.InvokeVoidAsync("alert", name);

    }
}