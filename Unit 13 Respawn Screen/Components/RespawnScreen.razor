@inject Unit_13_Respawn_Screen.Data.AppState AppState
@implements IDisposable
@inject IJSRuntime JsRuntime

<div id="respawn-screen-container">
     <div class="respawn-map-container">
       <div class="canvas">
           <img class="respawn-map" src="Assets/RespawnScreen.jpg" asp-append-version="true" >
               @foreach(Data.Marker obj in AppState.SelectedLayout.Markers)
                {
                int id = @rnd.Next(1000, 9999);
                string topCoord = @obj.Y + "px";
                string leftCoord = @obj.X + "px";
                <img class="marker-@id" src="Markers/@obj.Icon"/>
                  <style>
                        .marker-@id
                        {
                            position: absolute;
                            top: @topCoord;
                            left: @leftCoord;
                        }
                 </style>
                }
       </div>
     </div>
     <div class="bottom-controls">
         <div class="botom-controls-container">
                    <img class="bottom-control" src="Assets/undo.svg" />
                    <img class="bottom-control" src="Assets/redo.svg" />
                    <img class="bottom-control" src="Assets/undo_all.svg" />
         </div>
         <div class="botom-controls-container">
                    <img class="bottom-control" @onclick="AddMarker" src="Assets/add_location.svg" />
                    <img class="bottom-control" src="Assets/save.svg" />
         </div>
         <div class="botom-controls-container">
                    marker select
         </div>
         <div class="botom-controls-container">
                    <img class="bottom-control" src="Assets/fullscreen.svg" />
         </div>
    </div>
</div>


@code{
    private Random rnd = new Random();

    protected override void OnInitialized()
    {
        AppState.LayoutChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.LayoutChange -= StateHasChanged;
    }

    void AddMarker()
    {
        AppState.AddMarker(new Data.Marker("Marker", "Blue_Checkpoint.svg", rnd.Next(0, 200), rnd.Next(0, 200)));
    }
}