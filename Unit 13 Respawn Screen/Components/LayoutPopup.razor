@inject IJSRuntime JsRuntime
@inject Unit_13_Respawn_Screen.Data.AppState AppState
@implements IDisposable

<div style=@AppState.BrowseDialogShown class="dialog-window">
  <div class="dialog-window-content">
      <div class="top-flex">
            <p class="dialog-message">Please choose a layout to load...</p>
            <div class="layout-container">
                <NavLink class="layout" style="text-decoration:none; color:white;" href="" Match="NavLinkMatch.All">
                    <span aria-hidden="true">NEW</span> 
                </NavLink>
            </div>
      </div>
    <div class="layouts-flex">
        @foreach (Data.Preview obj in previews)
            {
            <div class="layout-container">
                <NavLink class="layout" style="text-decoration:none; color:white;" href="" Match="NavLinkMatch.All">
                    <span @onclick="@(e => SelectLayout(obj))" aria-hidden="true">@obj.LayoutName</span> 
                </NavLink>
            </div>
            }
    </div>
  </div>
</div>

@code{
    private Data.Preview[] previews = Data.BackendService.GetPreviews();
    protected override void OnInitialized()
    {
        AppState.BrowseDialogChange += StateHasChanged;
    }
    public void Dispose()
    {
        AppState.BrowseDialogChange -= StateHasChanged;
    }
    void SelectLayout(Unit_13_Respawn_Screen.Data.Preview preview)
    {
        AppState.SetLayout(preview);
        AppState.HideBrowseDialog();
    }
}